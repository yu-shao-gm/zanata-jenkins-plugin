<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  <!--
    This Jelly script is used to produce the global configuration option.

    Jenkins uses a set of tag libraries to provide uniformity in forms.
    To determine where this tag is defined, first check the namespace URI,
    and then look under $JENKINS/views/. For example, <f:section> is defined
    in $JENKINS/views/lib/form/section.jelly.

    It's also often useful to just check other similar scripts to see what
    tags they use. Views are always organized according to its owner class,
    so it should be straightforward to find them.
  -->
  <f:section title="Zanata Configuration(ini)">
    <f:entry title="Location" field="iniLocation"
      description="The location of zanata.ini file">
      <f:textbox default=".config/zanata.ini"></f:textbox> 
    </f:entry>
    <f:entry title="Contents" field="iniContents"
      description="The contents of zanata.ini">
      <f:textarea></f:textarea> 
    </f:entry>
    <f:entry title="Command to sync from source Git repo to Zanata" field="commandG2Z">
      <f:textarea default="find . -type f -not -path &quot;*/target/*&quot; -name 'zanata.xml' \&#10;  -execdir pwd \; \&#10;  -execdir ls \; \&#10;  -execdir echo 'Running zanata-cli -B stats\n' \; \&#10;  -execdir zanata-cli -B stats \; \&#10;  -execdir echo 'Running zanata-cli -B push\n' \; \&#10;  -execdir zanata-cli -B push \; \&#10;  -execdir echo 'Running zanata-cli -B pull\n' \; \&#10;  -execdir zanata-cli -B pull \;"></f:textarea>
    </f:entry>
    <f:entry title="Command to sync from Zanata to source Git repo" field="commandZ2G">
      <f:textarea default="find . -type f -not -path &quot;*/target/*&quot; -name 'zanata.xml' \&#10;  -execdir echo &quot;=== Commiting new translation $BUILD_TAG...\n&quot; \; \&#10;  -execdir pwd \; \&#10;  -execdir ls \; \&#10;  -execdir echo '=== Git add...\n' \; \&#10;  -execdir git add . \; \&#10;  -execdir echo '=== Git commit ...\n' \; \&#10;  -execdir git commit -m &quot;$BUILD_TAG&quot; \; \&#10;  -execdir echo &quot;=== Finished commit preparation - $BUILD_TAG.\n&quot; \;"></f:textarea>
    </f:entry>
  </f:section>
</j:jelly>
